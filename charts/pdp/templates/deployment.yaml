apiVersion: apps/v1
kind: Deployment
metadata:
  name: permitio-pdp
  labels:
    app: permitio-pdp
spec:
  replicas: {{ .Values.pdp.replicas }}
  selector:
    matchLabels:
      app: permitio-pdp
  template:
    metadata:
      labels:
        app: permitio-pdp
        {{- if .Values.labels }}
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      annotations:
        {{- if .Values.annotations }}
        {{- range $key, $value := .Values.annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      containers:
        - name: permitio-pdp
          image: "{{ .Values.pdp.image.repository }}:{{ .Values.pdp.image.tag }}"
          imagePullPolicy: {{ .Values.pdp.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.pdp.port }}
          env:
            - name: PDP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: permitio-pdp-secret
                  key: ApiKey
            {{- if .Values.pdp.pdpEnvs }}
            {{- range .Values.pdp.pdpEnvs }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.pdp.logs_forwarder.enabled }}
            - name: PDP_OPA_DECISION_LOG_CONSOLE
              value: "true"
            - name: OPAL_LOG_TO_FILE
              value: "true"
            - name: OPAL_LOG_FILE_PATH
              value: "/tmp/pdp.log"
            {{- end }}
            {{- if .Values.pdp.debug_mode }}
            - name: PDP_DEBUG
              value: "true"
            {{- end }}
            {{- if hasKey .Values "dd_agent_envref_enabled" }}
              {{- if .Values.dd_agent_envref_enabled }}
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
              {{- end }}
            {{- end }}
          resources:
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
            limits:
              memory: "{{ .Values.resources.limits.memory }}"
          livenessProbe:
            httpGet:
              path: /health
              port: 7000
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthy
              port: 7000
            initialDelaySeconds: 10
            periodSeconds: 10
          {{- if .Values.pdp.logs_forwarder.enabled }}
          volumeMounts:
            - name: logs
              mountPath: /tmp/
          {{- end }}
        {{- if .Values.pdp.logs_forwarder.enabled }}
        - name: fluentbit
          image: fluent/fluent-bit:3.1.4
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
              readOnly: true
            - name: logs
              mountPath: /tmp/
          env:
            - name: APP_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app']
        {{- end }}
      {{- if .Values.pdp.logs_forwarder.enabled }}
      volumes:
        - name: fluent-bit-config
          configMap:
            name: fluentbit-config
        - name: logs
          emptyDir: {}
      {{- end }}
